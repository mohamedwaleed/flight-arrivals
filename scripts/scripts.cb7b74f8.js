"use strict";function CsvModel(a,b){function c(a){for(var b={},c=a.split("\n"),d=1;d<c.length;d++){var e=c[d];if(e){var f=e.split(","),g=f[1].trim().substring(1,f[1].trim().length-1),h=f[2].trim().substring(1,f[2].trim().length-1),i=f[3].trim().substring(1,3)+":"+f[3].trim().substring(3,f[3].trim().length-1),j=f[4].trim().substring(1,3)+":"+f[4].trim().substring(3,f[4].trim().length-1);""===f[5]&&(f[5]="0.0");var k={date:f[0],origin:g,dest:h,departureTime:i,arrivalTime:j,arrivalDelay:parseFloat(f[5]),elapsedTime:parseFloat(f[6]),distance:parseFloat(f[7])};void 0===b[k.origin]?b[k.origin]=[k]:b[k.origin].push(k)}}return b}this.data=null;var d=this;d.readCsvFile=function(){var e=a.getFlights(),f=function(a){d.data=c(a.data)},g=function(){b.info("fail")};return e.then(f,g)},d.searchFlights=function(a,b){return d.data[a]?d.data[a].filter(function(a){return a.dest===b}):[]},d.getFlightsAsArray=function(){if(!d.data)return[];for(var a=[],b=Object.keys(d.data),c=0;c<b.length;c++)a=a.concat(d.data[b[c]]);return a}}function FlightModel(){this.getFlightDelays=function(a){return a.map(function(a){return a.arrivalDelay})},this.getFlightDates=function(a){return a.map(function(a){return a.date})},this.getFlightUniqeDates=function(a){for(var b={},c=0;c<a.length;c++)b[a[c]]=!0;return Object.keys(b)},this.getFlightDelaysRatio=function(a){return a.map(function(a){var b=Math.ceil(a.arrivalDelay/a.elapsedTime*100);return b})},this.getCorrelationPoints=function(a){var b={};a.forEach(function(a){b[a.distance]||(b[a.distance]={sum:0,count:0}),b[a.distance].sum+=a.arrivalDelay,b[a.distance].count++});for(var c=[],d=Object.keys(b),e=0;e<d.length;e++){var f=d[e],g=b[f].sum/b[f].count;c.push({x:f,y:g})}return c}}var services=angular.module("services",[]),controllers=angular.module("controllers",["services"]),app=angular.module("flightArrivalApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","chart.js","ui.router","ngMaterial","htmlToPdfSave","controllers","services"]);app.config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("app",{"abstract":!0,url:"/",templateUrl:"views/main.html"}).state("app.dashboard",{url:"dashboard",templateUrl:"views/dashboard.html",controller:"DashboardCtrl"}).state("app.analytics",{url:"analytics",templateUrl:"views/analytics.html",controller:"AnalyticsCtrl",params:{origin:null,dest:null}}),b.otherwise("/dashboard")}]),app.constant("BASE_URL",""),app.run(["CsvModel","$rootScope","$log",function(a,b,c){b.ready=!1,a.readCsvFile().then(function(){b.ready=!0},function(a){c.info(a)})}]),controllers.controller("MainCtrl",[function(){}]),controllers.controller("DashboardCtrl",["$scope","CsvModel","$state",function(a,b,c){a.origin="",a.dest="",a.searchFlights=function(){a.origin=a.origin.toUpperCase(),a.dest=a.dest.toUpperCase(),c.go("app.analytics",{origin:a.origin,dest:a.dest})}}]),controllers.controller("AnalyticsCtrl",["$scope","CsvModel","$stateParams","$state","$rootScope","$mdToast",function(a,b,c,d,e,f){function g(a){for(var b=0,c=0;c<a.length;c++){var d=a[c].arrivalDelay/a[c].elapsedTime*100;b+=d/a.length}return b}return a.origin=c.origin,a.dest=c.dest,console.log(e.ready),e.ready&&a.origin&&a.dest?(a.flights=b.searchFlights(a.origin,a.dest),0===a.flights.length?(f.show(f.simple().textContent("No avalible flight for given origin and destination").position("top right")),void d.go("app.dashboard")):(a.overallDelayRatio=g(a.flights).toFixed(2),void(a.allFlights=b.getFlightsAsArray()))):(f.show(f.simple().textContent("Input is empty").position("top right")),void d.go("app.dashboard"))}]),controllers.controller("FlightDelaysController",["$scope","FlightModel",function(a,b){var c=a.flights;if(c){var d=b.getFlightDelays(c),e=b.getFlightDates(c);a.labels=e,a.dates=b.getFlightUniqeDates(a.labels),a.data=[d],a.selectFlightsDelaysOnDate=function(){var f=a.selectedDate;if("all"===f)return a.data=[d],void(a.labels=e);var g=c.filter(function(a){return a.date===f}),h=b.getFlightDelays(g);a.data=[h],a.labels=[];for(var i=0;i<h.length;i++)a.labels.push(f)},a.options={title:{display:!0,text:"Flight delays",fontSize:30},legend:{display:!0},tooltips:{enabled:!0,callbacks:{label:function(a,b){var d=c[a.index].departureTime,e=c[a.index].arrivalTime,f=b.datasets[0].data[a.index]+" Miniuts , Departure time: "+d+", Arrival time: "+e;return f}}}},a.datasetOverride=[{label:"Flight delay (in miniuts)",borderWidth:1,borderColor:"#45b7cd",pointHighlightStroke:"#FF00AA",hoverBackgroundColor:"rgba(255,99,132,0.4)",hoverBorderColor:"rgba(255,99,132,1)",type:"bar"}]}}]),controllers.controller("FlightDelayRatiosController",["$scope","FlightModel",function(a,b){var c=a.flights;if(c){var d=b.getFlightDelaysRatio(c),e=b.getFlightDates(c);a.labels=e,a.dates=b.getFlightUniqeDates(a.labels),a.data=[d],a.selectFlightsDelaysOnDate=function(){var f=a.selectedDate;if("all"===f)return a.data=[d],void(a.labels=e);var g=c.filter(function(a){return a.date===f}),h=b.getFlightDelays(g);a.data=[h],a.labels=[];for(var i=0;i<h.length;i++)a.labels.push(f)},a.options={title:{display:!0,text:"Flight delay ratios",fontSize:30},legend:{display:!0},tooltips:{enabled:!0,callbacks:{label:function(a,b){var d=c[a.index].departureTime,e=c[a.index].arrivalTime,f=b.datasets[0].data[a.index],g=(f>=0?f:-1*f)+"% "+(f>=0?"delay arrival":"early arrival")+" , Departure time: "+d+", Arrival time: "+e;return g}}}},a.datasetOverride=[{label:"Flight delay ratio (in percentage)",borderWidth:1,borderColor:"#45b7cd",pointHighlightStroke:"#FF00AA",hoverBackgroundColor:"rgba(255,99,132,0.4)",hoverBorderColor:"rgba(255,99,132,1)",type:"bar"}]}}]),controllers.controller("DelaysCorrelationController",["$scope","FlightModel",function(a,b){var c=a.flights;if(c){var d=b.getCorrelationPoints(c);a.data=[d],a.options={title:{display:!0,text:"Correlation between delays and distances",fontSize:30},legend:{display:!0},tooltips:{enabled:!0,callbacks:{label:function(a,b){var c=b.datasets[0].data[a.index].x+" miles and "+b.datasets[0].data[a.index].y+" miniuts avarage delay";return c}}},scales:{xAxes:[{type:"linear",position:"bottom"}]}},a.datasetOverride=[{label:"X axes ( distances in miles ) Y axes ( avarage delays in miniuts)",borderWidth:1,borderColor:"#45b7cd",pointHighlightStroke:"#FF00AA",hoverBackgroundColor:"rgba(255,99,132,0.4)",hoverBorderColor:"rgba(255,99,132,1)",type:"scatter"}]}}]),services.service("CsvService",["$http","BASE_URL",function(a,b){return{getFlights:function(){return a({url:b+"Flight-Delays.csv",method:"GET"})}}}]),services.factory("CsvModel",["CsvService","$log",function(a,b){return new CsvModel(a,b)}]),services.factory("FlightModel",[function(){return new FlightModel}]),app.directive("flightDelays",function(){return{restrict:"E",scope:{flights:"=flights"},templateUrl:"views/bar-chart.html",controller:"FlightDelaysController"}}),app.directive("flightDelayRatios",function(){return{restrict:"E",scope:{flights:"=flights"},templateUrl:"views/bar-chart.html",controller:"FlightDelayRatiosController"}}),app.directive("delaysCorrelation",function(){return{restrict:"E",scope:{flights:"=flights"},templateUrl:"views/scatter-chart.html",controller:"DelaysCorrelationController"}}),angular.module("flightArrivalApp").run(["$templateCache",function(a){a.put("views/analytics.html",'<div class="container main-container"> <div class="row"> <div class="col-md-12 center"> <h1>Flights From {{origin}} to {{dest}} </h1> <button pdf-save-button="idOne" pdf-name="Flights_From_{{origin}}_to_{{dest}}.pdf" class="btn">Download as pdf</button> </div> <div class="col-md-4"> </div> </div> <div pdf-save-content="idOne"> <div class="row"> <div class="col-md-12 center"> <h3>Overall delay ratio : {{overallDelayRatio}} miniuts</h3> </div> </div> <div class="row"> <div class="col-md-12"> <flight-delays flights="flights"></flight-delays> </div> </div> <hr class="divide-line"> <div class="row"> <div class="col-md-12"> <flight-delay-ratios flights="flights"></flight-delay-ratios> </div> </div> <hr class="divide-line"> <div class="row"> <div class="col-md-12"> <delays-correlation flights="allFlights"></delays-correlation> </div> </div> <hr class="divide-line"> </div> </div>'),a.put("views/bar-chart.html",'<div class="bar-chart-container"> <div class="row"> <div class="col-lg-12 form-inline center"> <label>Filter on specific day: </label> <select class="form-control date-filter-select" ng-model="selectedDate" ng-change="selectFlightsDelaysOnDate()"> <option value="{{date}}" ng-repeat="date in dates"> {{date}} </option> <option value="all">All</option> </select> </div> </div> <!-- <a href="" ng-click="selectFligtsOnDate(\'2017-01-02\')" style="text-align: center;">2017-01-01</a> --> <canvas id="bar" class="chart chart-bar" chart-data="data" chart-labels="labels" chart-series="series" chart-colors="colors" chart-dataset-override="datasetOverride" chart-options="options"> </canvas> </div>'),a.put("views/dashboard.html",'<div id="slider"> <div id="color_layer"> <div class="input-area dashboard-form-container"> <h3 id="banner-label">Choose your best flight</h3> <form ng-submit="searchFlights()" class="form-inline center dashboard-form"> <div class="form-group"> <div class="input-group"> <span class="input-group-addon"><span class="glyphicon glyphicon-export"></span></span> <input ng-model="origin" type="text" class="form-control" placeholder="origin"> </div> </div> <div class="form-group"> <div class="input-group"> <span class="input-group-addon"><span class="glyphicon glyphicon-import"></span></span> <input ng-model="dest" type="text" class="form-control" placeholder="destination"> </div> </div> <button type="submit" class="btn btn-success">Search flights <span class="glyphicon glyphicon-chevron-right"></span></button> </form> </div> </div> </div>'),a.put("views/main.html",'<div ng-show="!ready" class="loading"> <md-progress-circular class="loading-spinner md-hue-3" md-diameter="70"></md-progress-circular> <h3 class="center">Initializing app ...</h3> </div> <div ng-show="ready"> <nav class="navbar navbar-default"> <div class="container-fluid"> <div class="navbar-header"> <a class="navbar-brand" href="#"> <img class="logo" alt="Brand" src="images/logo.9f7f571f.png"> </a> <label class="logo-label">Flight <span>arrivals</span></label> </div> </div> </nav> <div ui-view></div> </div>'),a.put("views/scatter-chart.html",'<div> <canvas id="bar" class="chart chart-line" chart-data="data" chart-labels="labels" chart-series="series" chart-colors="colors" chart-dataset-override="datasetOverride" chart-options="options"> </canvas> </div>')}]);